variables: vars.yml
schedules: no

web_server:
  web_ui: no

irc:
  TorrentLeech:
    tracker_file: TorrentLeech.tracker
    task_re:
      - task: get series
        patterns:
          - regexp: "TV :: Episodes HD"
            field: irc_category
      - task: get movie
        patterns:
          - regexp: "{? irc.movie_category ?}"
            field: irc_category
    nickname: "{? irc.nickname ?}"
    port: 7021
    use_ssl: yes
    channels: '#tlannounces'
    task_delay: 60
    rsskey: "{? irc.rsskey ?}"

tasks:
  get series:
    template:
      - get series

  get movie:
    template:
      - movie metainfo
      - get movie

  decompress series:
    template:
      - global decompress
      - series metainfo
      - series decompress

  decompress movie:
    template:
      - global decompress
      - movie metainfo
      - movie trakt removal
      - movie decompress

  copy series:
    template:
      - global copy
      - series metainfo
      - series copy

  copy movie:
    template:
      - global copy
      - movie metainfo
      - movie trakt removal
      - movie copy

  new SDR series:
    template:
      - new SDR series

  new HDR series:
    template:
      - new HDR series

templates:
  global:
    manual: yes
    no_entries_ok: yes

  get series:
    sequence:
      - configure_series:
          from:
            trakt_list:
              account: "{? trakt.account ?}"
              list: "{? trakt.series.hdr.list ?}"
              strip_dates: yes
              type: shows
          settings: "{? trakt.series.hdr.settings ?}"
      - configure_series:
          from:
            trakt_list:
              account: "{? trakt.account ?}"
              list: "{? trakt.series.sdr.list ?}"
              strip_dates: yes
              type: shows
          settings: "{? trakt.series.sdr.settings ?}"
    qbittorrent: yes

  get movie:
    crossmatch:
      from:
        - trakt_list:
            account: "{? trakt.account ?}"
            list: "{? trakt.movie.list ?}"
            type: movies
      fields:
        - trakt_movie_id
      action: accept
    quality: "{? trakt.movie.quality ?}"
    qbittorrent: yes

  global decompress:
    filesystem:
      path: "{? path.torrent ?}"
      recursive: yes
      mask: '*.rar'
      retrieve: files
    archives: yes

  global copy:
    filesystem:
      path: "{? path.torrent ?}"
      recursive: yes
      regexp: "{? video_regexp ?}"
      retrieve: files
    regexp:
      accept_excluding:
        - sample

  series metainfo:
    parsing:
      series: guessit
    metainfo_series: yes
    require_field:
      - series_name
      - series_season
      - series_episode

  series decompress:
    decompress:
      to: "{? path.series ?}"
      keep_dirs: no
      regexp: "{? video_regexp ?}"

  series copy:
    copy:
      to: "{? path.series ?}"

  movie metainfo:
    parsing:
      movie: guessit
    trakt_lookup:
      account: "{? trakt.account ?}"
    require_field: trakt_movie_id

  movie trakt removal:
    trakt_lookup:
      account: "{? trakt.account ?}"
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movie.list ?}"
          type: movies

  movie decompress:
    decompress:
      to: "{? path.movie ?}"
      keep_dirs: no
      regexp: "{? video_regexp ?}"

  movie copy:
    copy:
      to: "{? path.movie ?}"

  new SDR series:
    seen: local
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.series.sdr.list ?}"
      type: episodes
    accept_all: yes
    set_series_begin: yes
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series.sdr.list ?}"
          type: episodes
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series.sdr.list ?}"
          type: shows

  new HDR series:
    seen: local
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.series.hdr.list ?}"
      type: episodes
    accept_all: yes
    set_series_begin: yes
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series.hdr.list ?}"
          type: episodes
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series.hdr.list ?}"
          type: shows
